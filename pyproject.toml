[tool.ruff]
line-length = 120
target-version = "py311"

exclude = [
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "venv",
    "__pycache__",
    "nginx",
    "postgresql",
    "docs",
    "migration/",
    "tests/",
]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ARG",     # Пропуски аргументов в функциях (например, пропущенные аргументы в документации)
    "ANN",     # Отсутствие аннотаций типов (необязательные для динамически типизированного Python)
    "COM812",  # Неиспользуемые переменные внутри comprehensions (может быть полезно в некоторых случаях)
    "ISC001",  # Проверка на использование неверного синтаксиса для isinstance() (может быть не критично)
    "EM101",   # Неправильное использование raise (иногда нужно поднимать исключения без дополнительного контекста)
    "EM102",   # Исключения без аргументов (может быть приемлемо в некоторых случаях)
    "PT001",   # Устаревшие исключения (например, BaseException, SystemExit)
    "PT023",   # Неверный порядок аргументов в isinstance (может быть не критично)
    "SIM108",  # Использование множества с одним элементом (не всегда ошибка)
    "SIM114",  # Использование `if x is not None and x` вместо `if x` (может быть намеренно)
    "TRY003",  # Пропуск явного исключения в блоке `try` (может быть полезно в некоторых случаях)
    "PLW2901", # Использование подсчета вызовов функций (не всегда ошибка)
    "D",       # любые замечания с докстрингами
    "TD",      # игнорировать все что связано с _TODO_
    "RUF001",  # кириллические символы в докстрингах
    "RUF002",  # кириллические символы в комментариях
    "RUF003",  # кириллические символы в _TODO_
    "FIX002",  # _TODO_ описание проблемы
    "B904",    # Правило удалено - при вызове raise в exc требовалось указывать raise <name> from exc | remapped TRY200
    "B008",    # проверка вызова функций в аргументах других функций - в Depends нам нужен
    "PTH100",  # рекомендация по использованию `Path.parent` вместо os.path.abspath
    "PTH120",  # рекомендация по использованию `Path.parent` вместо os.path.dirname
    "PTH118",  # рекомендация по использованию `Path` with `/` вместо os.path.join
    "PTH123",  # Path.open() вместо open()
]
fixable = ["ALL"]
unfixable = []
per-file-ignores = {}

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
pythonpath = [
    ".", "src"
]
asyncio_mode = "auto"
